-- 1번 부서코드가 노옹철 사원과 같은 소속의 직원 명단 조회하세요.
select
      emp_name
 from employee;     
 
 -- 2번 전 직원의 평균 급여보다 많은 급여를 받고 있는 직원의 사번, 이름, 직급코드, 급여를 조회하세요.
select
	 emp_id
     ,emp_name
     ,job_code
     ,salary
from employee;    

-- 3번 노옹철 사원의 급여보다 많이 받는 직원의 사번, 이름, 부서코드, 직급코드, 급여를 조회하세요.
select
       e.emp_id
       ,e.emp_name
       ,e.dept_code
       ,e.job_code
       ,e.salary
 from EMPLOYEE e
 LEFT JOIN department d ON e.DEPT_CODE = d.DEPT_ID
 LEFT JOIN job j ON e.JOB_CODE = j.JOB_CODE;
 
 -- 4번 가장 적은 급여를 받는 직원의 사번, 이름, 부서코드, 직급코드, 급여, 입사일을 조회하세요.
SELECT 
      e.EMP_ID
      , e.EMP_NAME
      , e.DEPT_CODE
      , e.JOB_CODE
	  , e.SALARY
      , e.HIRE_DATE
FROM employee e
LEFT JOIN department d ON e.DEPT_CODE = d.DEPT_ID
LEFT JOIN job j ON e.JOB_CODE = j.JOB_CODE
WHERE e.EMP_ID = 214;

-- 5번 부서별 최고 급여를 받는 직원의 이름, 직급코드, 부서코드, 급여 조회하세요.
SELECT 
      e emp_name
     , e.job_code
      , e.dept_code
      , e.salary
FROM employee e
LEFT JOIN department d ON e.dept_code = d.dept_id
LEFT JOIN job j ON e.job_code = j.job_code
WHERE e.job_code IN ('J1', 'J3', 'J6', 'J7');

-- 6번 관리자에 해당하는 직원에 대한 정보와 관리자가 아닌 직원의 정보를 추출하여 조회하세요.
SELECT e.emp_id AS 사번
       ,e.emp_name AS 이름
	   ,d.dept_title AS 부서명
       ,j.job_name AS 직급
       ,'관리자' AS 구분
FROM employee e
JOIN department d ON e.dept_code = d.dept_id
JOIN job j ON e.job_code = j.job_code
WHERE e.manager_id IS NULL

UNION

SELECT 
       e.emp_id AS 사번
      ,e.emp_name AS 이름
      ,d.dept_title AS 부서명
      ,j.job_name AS 직급                                      
      ,'직원' AS 구분
FROM employee e
JOIN department d ON e.dept_code = d.dept_id
JOIN job j ON e.job_code = j.job_code
WHERE e.manager_id IS NOT NULL;

-- 7번 자기 직급의 평균 급여를 받고 있는 직원의 사번, 이름, 직급코드, 급여를 조회하세요.




-- 8. 퇴사한 여직원과 같은 부서, 같은 직급에 해당하는 직원의 이름, 직급코드, 부서코드, 입사일을 조회하세요.




-- 9. 급여 평균 3위 안에 드는 부서의 부서 코드와 부서명, 평균급여를 조회하세요.



-- 10. 부서별 급여 합계가 전체 급여의 총 합의 20%보다 많은 부서의 부서명과, 부서별 급여 합계를 조회하세요.


